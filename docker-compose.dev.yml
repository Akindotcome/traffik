# Development and testing with Docker Compose
version: '3.8'

services:
  # Fast development testing (no Redis)
  test-fast:
    build:
      context: .
      target: test-no-redis
    volumes:
      - .:/app:delegated
      - /app/.pytest_cache
    command: uv run pytest tests/ -x -v -k "not redis and not Redis"

  # Full test suite with Redis
  test-full:
    build:
      context: .
      target: test
    depends_on:
      redis-dev:
        condition: service_healthy
    environment:
      - REDIS_HOST=redis-dev
      - REDIS_PORT=6379
    volumes:
      - .:/app:delegated
      - /app/.pytest_cache
    command: uv run pytest -x -v

  # Redis for development
  redis-dev:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_dev_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3

  # Interactive development shell
  shell:
    build:
      context: .
      target: development
    depends_on:
      redis-dev:
        condition: service_healthy
    environment:
      - REDIS_HOST=redis-dev
      - REDIS_PORT=6379
    volumes:
      - .:/app:delegated
    stdin_open: true
    tty: true
    command: bash

  # Watch mode for continuous testing
  test-watch:
    build:
      context: .
      target: development
    depends_on:
      redis-dev:
        condition: service_healthy
    environment:
      - REDIS_HOST=redis-dev
      - REDIS_PORT=6379
    volumes:
      - .:/app:delegated
      - /app/.pytest_cache
    command: |
      bash -c "
        echo 'Starting test watch mode...'
        uv run pytest-watch -- -x -v
      "

volumes:
  redis_dev_data:
